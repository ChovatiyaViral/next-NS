import React from "react";
import classnames from "classnames";
import Section from "@/components/layout/content/section";
import axios from "axios";
import Link from "next/link";
import { toast } from "react-toastify";

const contactDetails = {
  email: "",
  name: "",
  dob: "",
  message: "",
}

const productDetailsFooter = (props) => {
  const {
    bgColor,
    lineColor,
    textColor,
    placeholderColor,
    footerTextColor,
    footerLogo,
    footerborder,
    socialMediaBorderColor
  } = props;

  const [footerData, setFooterData] = React.useState();
  const [contactData, setContactData] = React.useState(contactDetails);

  var emailPattern = new RegExp(/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/);


  React.useEffect(() => {
    getFooterData();
  }, [])

  const getFooterData = async () => {
    const response = await axios({
      method: "GET",
      url: "https://isg-cms.stageoakum.in/master-template"
    }).catch(err => {
      console.log("err", err);
    });
    if (response && response.status === 200) {
      setFooterData(response?.data);
    } else {
      console.log("err", response?.error);
    }
  }


  const handleChange = (e) => {
    setContactData({
      ...contactData,
      [e.target.name]: e.target.value
    })
  }

  const handleSubmitContact = async (data) => {
    if (data) {
      if (data.email === "") {
        toast.error('Email can not be empty');
      } else if (!emailPattern.test(data.email)) {
        toast.error('Invalid Email Address');
      }

      if (data.name === "") {
        toast.error('Name can not be empty');
      }

      if (data.dob === "") {
        toast.error('Date can not be empty');
      }

      if (data.message === "") {
        toast.error('Message can not be empty');
      }

      if (data.email !== "" && data.name !== "" && data.dob !== "" && data.message !== "") {
        const response = await axios({
          method: "POST",
          url: "https://isg-cms.stageoakum.in/contacts",
          data: data
        }).catch(err => {
          console.log("err", err);
        });
        if (response && response.status === 200) {
          toast.success('Contact Details Submitted successfully')
        } else {
          console.log("err", response?.error);
        }
      }
    }
  }

  const todayDate = (new Date().getFullYear() < 10 ? `0${new Date().getFullYear()}` : new Date().getFullYear()) + "-" + (new Date().getMonth() < 10 ? `0${new Date().getMonth()}` : new Date().getMonth()) + "-" + (new Date().getDate() < 10 ? `0${new Date().getDate()}` : new Date().getDate())

  return (
    <footer id="footer">
      <div
        className={classnames(
          "ftBG",
          "flex flex-col items-center justify-evenly"
        )}
        style={{ background: bgColor ? bgColor : "#fff" }}
      >
        <h3
          className="ftitle"
          style={{ color: lineColor ? lineColor : "#fff" }}
        >
          Contact Us
        </h3>
        <p
          className="ftxt"
          style={{ color: textColor ? textColor : "#B8B8B8" }}
        >
          Lorem ipsum dolor sit amet consectetur adipiscing elit, sed do eiusmod
          tempor incididunt
        </p>
        <div className="contactForm">
          <input
            type="email"
            className="inputStyle"
            style={{ background: bgColor ? bgColor : "#363755" }}
            id="outlined-basic"
            onChange={handleChange}
            value={contactData.email}
            name="email"
            placeholder="Enter a valid email address"
          />
          <input
            type="text"
            className="inputStyle"
            style={{ background: bgColor ? bgColor : "#363755" }}
            id="outlined-basic"
            name="name"
            value={contactData.name}
            onChange={handleChange}
            placeholder="Enter your name"
          />
          <input
            type="date"
            className="inputStyle"
            onChange={handleChange}
            name="dob"
            style={{ color: contactData.dob !== "" ? "#FFFFFF" : "#6A83DB", background: bgColor ? bgColor : "#363755" }}
            id="outlined-basic"
            max={todayDate}
            value={contactData.dob}
            placeholder="mm/dd/yyyy"
          />
        </div>
        <textarea
          className="inputStyle1"
          style={{ background: bgColor ? bgColor : "#363755" }}
          onChange={handleChange}
          id="outlined-basic"
          name="message"
          value={contactData.message}
          placeholder="Enter your message"
        />
        <button
          onClick={() => handleSubmitContact(contactData)}
          className="btnOutlined2"
          style={{
            background: "transparent",
            borderRadius: 30,
            textTransform: "uppercase",
          }}
          type="button"
        >
          Submit
        </button>
      </div>

      <Section>
        <div className="footer-section">
          <div
            className="flex flex-row"
            style={{ paddingTop: 47, paddingBottom: 15 }}
          >
            {/* <div className="flex items-center justify-center">
            <Image className='link1' src="/Logo1.png" alt="Logo" width={298} height={57} />
          </div> */}

            <div className="col-5 grid grid-flow-col">
              <div>
                {
                  footerData && footerData.footer_menu && footerData.footer_menu.length > 0 ?
                    footerData.footer_menu.slice(0, 3).map((item, index) => {
                      return (
                        <p className="ftTxt" key={index} style={{
                          color: footerTextColor ? footerTextColor : "#363755",
                        }}>
                          <Link href={item?.link}>
                            <a className={"link"}>{item?.title}</a>
                          </Link>
                        </p>
                      )
                    })
                    : null
                }
              </div>
              <div>
                {
                  footerData && footerData.footer_menu && footerData.footer_menu.length > 0 ?
                    footerData.footer_menu.slice(3).map((item, index) => {
                      return (
                        <p className="ftTxt" key={index} >
                          <Link href={item?.link}>
                            <a className={"link"} >{item?.title}</a>
                          </Link>
                        </p>
                      )
                    })
                    : null
                }
              </div>
            </div>

            <div className="col-7 flex flex-row justify-end">
              <div className="col-5">
                <svg
                  width="173"
                  height="34"
                  viewBox="0 0 173 34"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2.59277 1.22461H1.30371C1.2321 1.22461 1.1748 1.20312 1.13184 1.16016C1.08887 1.10286 1.06738 1.03841 1.06738 0.966797C1.06738 0.880859 1.08887 0.816406 1.13184 0.773438C1.1748 0.716146 1.2321 0.6875 1.30371 0.6875H8.28613C8.35775 0.6875 8.41504 0.716146 8.45801 0.773438C8.5153 0.816406 8.54395 0.873698 8.54395 0.945312C8.54395 1.03125 8.5153 1.10286 8.45801 1.16016C8.41504 1.20312 8.35775 1.22461 8.28613 1.22461H6.99707V32.4414H8.28613C8.42936 32.5417 8.50098 32.6348 8.50098 32.7207C8.50098 32.821 8.42936 32.9141 8.28613 33H1.13184C0.974284 32.8997 0.895508 32.8066 0.895508 32.7207C0.895508 32.6348 0.974284 32.5417 1.13184 32.4414H2.59277V1.22461ZM20.1455 3.30859C20.1455 2.64974 20.0596 2.17708 19.8877 1.89062C19.7158 1.60417 19.4508 1.40365 19.0928 1.28906L18.1689 1.20312C18.0973 1.17448 18.0615 1.0957 18.0615 0.966797C18.0615 0.852214 18.0758 0.773438 18.1045 0.730469C18.1475 0.6875 18.2406 0.666016 18.3838 0.666016H22.1865C22.2438 0.666016 22.2868 0.694661 22.3154 0.751953C22.3584 0.794922 22.3799 0.852214 22.3799 0.923828C22.3799 0.995443 22.3584 1.05273 22.3154 1.0957C22.2868 1.12435 22.165 1.18164 21.9502 1.26758C21.5062 1.43945 21.1982 1.66862 21.0264 1.95508C20.8545 2.22721 20.7471 2.74284 20.7041 3.50195V33H17.374L12.0244 3.56641V30.2285C12.0244 30.959 12.1032 31.4746 12.2607 31.7754C12.4183 32.0618 12.6761 32.2624 13.0342 32.377L14.001 32.4629C14.0726 32.5059 14.1084 32.5918 14.1084 32.7207C14.1084 32.8353 14.0869 32.9141 14.0439 32.957C14.0153 32.9857 13.9294 33 13.7861 33H9.9834C9.92611 33 9.87598 32.9785 9.83301 32.9355C9.80436 32.8926 9.79004 32.8353 9.79004 32.7637C9.79004 32.6921 9.80436 32.6419 9.83301 32.6133C9.87598 32.5703 10.0049 32.5059 10.2197 32.4199C10.6637 32.248 10.9645 32.026 11.1221 31.7539C11.2939 31.4818 11.4014 30.9518 11.4443 30.1641V1.22461H10.2412C10.1696 1.22461 10.1051 1.20312 10.0479 1.16016C10.0049 1.10286 9.9834 1.03125 9.9834 0.945312C9.9834 0.873698 10.0049 0.816406 10.0479 0.773438C10.1051 0.716146 10.1696 0.6875 10.2412 0.6875H15.8057L20.1455 24.2988V3.30859ZM24.6143 32.4199V1.22461H23.2607C23.1605 1.22461 23.0817 1.20312 23.0244 1.16016C22.9814 1.10286 22.96 1.03125 22.96 0.945312C22.96 0.873698 22.9814 0.816406 23.0244 0.773438C23.0817 0.716146 23.1605 0.6875 23.2607 0.6875H28.8252C30.5296 0.6875 31.9189 1.07422 32.9932 1.84766C34.0674 2.62109 34.8551 3.86003 35.3564 5.56445C36.0153 7.8418 36.3447 10.2695 36.3447 12.8477V20.8184C36.3447 23.4967 36.0225 25.9173 35.3779 28.0801C35.0055 29.2975 34.5329 30.25 33.96 30.9375C33.387 31.6107 32.6924 32.1263 31.876 32.4844C31.0596 32.8281 30.0426 33 28.8252 33H23.2607C23.1605 33 23.0817 32.9785 23.0244 32.9355C22.9814 32.8783 22.96 32.8066 22.96 32.7207C22.96 32.6204 22.9814 32.5488 23.0244 32.5059C23.0817 32.4486 23.1605 32.4199 23.2607 32.4199H24.6143ZM29.0615 32.4199H29.5557C30.4294 32.4199 31.0023 32.2695 31.2744 31.9688C31.5465 31.6536 31.6826 30.8587 31.6826 29.584V3.60938C31.6826 2.67839 31.5465 2.04818 31.2744 1.71875C31.0166 1.38932 30.6156 1.22461 30.0713 1.22461H29.0615V32.4199ZM38.9873 1.22461H37.6982C37.6266 1.22461 37.5693 1.20312 37.5264 1.16016C37.4834 1.10286 37.4619 1.03841 37.4619 0.966797C37.4619 0.880859 37.4834 0.816406 37.5264 0.773438C37.5693 0.716146 37.6266 0.6875 37.6982 0.6875H44.6807C44.7523 0.6875 44.8096 0.716146 44.8525 0.773438C44.9098 0.816406 44.9385 0.873698 44.9385 0.945312C44.9385 1.03125 44.9098 1.10286 44.8525 1.16016C44.8096 1.20312 44.7523 1.22461 44.6807 1.22461H43.3916V32.4414H44.6807C44.8239 32.5417 44.8955 32.6348 44.8955 32.7207C44.8955 32.821 44.8239 32.9141 44.6807 33H37.5264C37.3688 32.8997 37.29 32.8066 37.29 32.7207C37.29 32.6348 37.3688 32.5417 37.5264 32.4414H38.9873V1.22461ZM51.3838 1.13867H53.7686L57.5928 32.4414H58.5596C58.7171 32.5417 58.7959 32.6348 58.7959 32.7207C58.7959 32.8066 58.7171 32.8997 58.5596 33H52.0928C52.0212 33 51.9639 32.9785 51.9209 32.9355C51.8779 32.8783 51.8564 32.8066 51.8564 32.7207C51.8564 32.6348 51.8779 32.5703 51.9209 32.5273C51.9639 32.4701 52.0212 32.4414 52.0928 32.4414H53.124L52.5654 26.3398H48.6768L48.2041 29.7988C48.1898 29.985 48.1826 30.1784 48.1826 30.3789C48.1826 31.0091 48.2972 31.4889 48.5264 31.8184C48.7699 32.1335 49.0993 32.3268 49.5146 32.3984L49.8584 32.5059C49.9157 32.5632 49.9443 32.6348 49.9443 32.7207C49.9443 32.8066 49.9157 32.8783 49.8584 32.9355C49.8154 32.9785 49.7581 33 49.6865 33H46.0127C45.9411 33 45.8766 32.9785 45.8193 32.9355C45.7764 32.8783 45.7549 32.8066 45.7549 32.7207C45.7549 32.6348 45.7764 32.5632 45.8193 32.5059L46.0771 32.4199C46.4925 32.3626 46.8148 32.1764 47.0439 31.8613C47.3877 31.36 47.6312 30.5293 47.7744 29.3691L51.3838 1.13867ZM50.8467 9.15234L48.7412 25.7812H52.501L50.8467 9.15234ZM70.0322 3.30859C70.0322 2.64974 69.9463 2.17708 69.7744 1.89062C69.6025 1.60417 69.3376 1.40365 68.9795 1.28906L68.0557 1.20312C67.984 1.17448 67.9482 1.0957 67.9482 0.966797C67.9482 0.852214 67.9626 0.773438 67.9912 0.730469C68.0342 0.6875 68.1273 0.666016 68.2705 0.666016H72.0732C72.1305 0.666016 72.1735 0.694661 72.2021 0.751953C72.2451 0.794922 72.2666 0.852214 72.2666 0.923828C72.2666 0.995443 72.2451 1.05273 72.2021 1.0957C72.1735 1.12435 72.0518 1.18164 71.8369 1.26758C71.3929 1.43945 71.085 1.66862 70.9131 1.95508C70.7412 2.22721 70.6338 2.74284 70.5908 3.50195V33H67.2607L61.9111 3.56641V30.2285C61.9111 30.959 61.9899 31.4746 62.1475 31.7754C62.305 32.0618 62.5628 32.2624 62.9209 32.377L63.8877 32.4629C63.9593 32.5059 63.9951 32.5918 63.9951 32.7207C63.9951 32.8353 63.9736 32.9141 63.9307 32.957C63.902 32.9857 63.8161 33 63.6729 33H59.8701C59.8128 33 59.7627 32.9785 59.7197 32.9355C59.6911 32.8926 59.6768 32.8353 59.6768 32.7637C59.6768 32.6921 59.6911 32.6419 59.7197 32.6133C59.7627 32.5703 59.8916 32.5059 60.1064 32.4199C60.5505 32.248 60.8512 32.026 61.0088 31.7539C61.1807 31.4818 61.2881 30.9518 61.3311 30.1641V1.22461H60.1279C60.0563 1.22461 59.9919 1.20312 59.9346 1.16016C59.8916 1.10286 59.8701 1.03125 59.8701 0.945312C59.8701 0.873698 59.8916 0.816406 59.9346 0.773438C59.9919 0.716146 60.0563 0.6875 60.1279 0.6875H65.6924L70.0322 24.2988V3.30859ZM82.3857 31.1309C81.8988 31.4746 81.3975 31.9043 80.8818 32.4199C80.3805 32.9212 80.0726 33.1719 79.958 33.1719C79.915 33.1719 79.8792 33.1504 79.8506 33.1074C79.8219 33.0645 79.8076 32.9714 79.8076 32.8281V19.3359C79.8076 19.2786 79.8219 19.2357 79.8506 19.207C79.8936 19.1641 79.9365 19.1426 79.9795 19.1426C80.0511 19.1426 80.1156 19.1855 80.1729 19.2715C80.2731 19.4004 80.3232 19.5436 80.3232 19.7012V20.625C80.3232 22.4154 80.6025 24.4564 81.1611 26.748C81.7197 29.0397 82.4502 30.6725 83.3525 31.6465C83.7965 32.1335 84.3122 32.377 84.8994 32.377C85.5726 32.377 86.1598 32.0618 86.6611 31.4316C87.1624 30.7871 87.4131 29.8203 87.4131 28.5312C87.4131 27.2995 87.1839 25.9961 86.7256 24.6211C86.124 22.7878 84.792 19.8516 82.7295 15.8125C81.4404 13.2917 80.6169 11.4727 80.2588 10.3555C79.915 9.22396 79.7432 8.12826 79.7432 7.06836C79.7432 4.96289 80.2373 3.31576 81.2256 2.12695C82.2282 0.938151 83.3669 0.34375 84.6416 0.34375C85.7301 0.34375 86.7113 0.923828 87.585 2.08398C88.3011 1.69727 88.9958 1.21745 89.6689 0.644531C89.8981 0.44401 90.0485 0.34375 90.1201 0.34375C90.1488 0.34375 90.1774 0.358073 90.2061 0.386719C90.2347 0.44401 90.249 0.544271 90.249 0.6875V12.3535C90.249 12.5111 90.2132 12.64 90.1416 12.7402C90.0986 12.7975 90.0413 12.8262 89.9697 12.8262C89.8838 12.8262 89.8193 12.7904 89.7764 12.7188C89.7334 12.6471 89.6475 12.1315 89.5186 11.1719C88.9313 6.71745 88.1507 3.76693 87.1768 2.32031C86.6038 1.48958 85.9521 1.07422 85.2217 1.07422C84.6774 1.07422 84.2048 1.31771 83.8037 1.80469C83.4027 2.29167 83.2021 3.00781 83.2021 3.95312C83.2021 5.65755 84.1761 8.45768 86.124 12.3535L88.0146 16.1562C89.318 18.7773 90.1846 20.8613 90.6143 22.4082C91.0439 23.9408 91.2588 25.3158 91.2588 26.5332C91.2588 28.653 90.736 30.3145 89.6904 31.5176C88.6449 32.7207 87.4202 33.3223 86.0166 33.3223C84.4984 33.3223 83.2881 32.5918 82.3857 31.1309ZM93.8799 1.24609H92.6123C92.4548 1.13151 92.376 1.03841 92.376 0.966797C92.376 0.880859 92.4548 0.78776 92.6123 0.6875H99.5088C99.5804 0.6875 99.6377 0.716146 99.6807 0.773438C99.7236 0.816406 99.7451 0.873698 99.7451 0.945312C99.7451 1.04557 99.7236 1.12435 99.6807 1.18164C99.6377 1.22461 99.5804 1.24609 99.5088 1.24609H98.3057V30.8086C98.3057 31.4102 98.4704 31.8757 98.7998 32.2051C99.1292 32.5345 99.5732 32.6992 100.132 32.6992C101.149 32.6992 101.987 32.2982 102.646 31.4961C103.319 30.6797 103.655 29.3978 103.655 27.6504V3.99609C103.655 2.92188 103.562 2.24154 103.376 1.95508C103.204 1.6543 102.868 1.44661 102.366 1.33203C102.108 1.27474 101.937 1.21029 101.851 1.13867C101.779 1.05273 101.743 0.966797 101.743 0.880859L101.786 0.730469L101.958 0.6875H105.353C105.438 0.6875 105.546 0.766276 105.675 0.923828C105.675 0.995443 105.639 1.0599 105.567 1.11719C105.51 1.17448 105.403 1.21745 105.245 1.24609C104.959 1.28906 104.737 1.45378 104.579 1.74023C104.307 2.19857 104.171 2.95052 104.171 3.99609V28.252C104.171 29.9134 103.741 31.1738 102.882 32.0332C102.037 32.8926 100.812 33.3223 99.208 33.3223C97.1885 33.3223 95.7275 32.8066 94.8252 31.7754C94.195 31.0449 93.8799 29.6699 93.8799 27.6504V1.24609ZM108.317 1.22461H107.05C106.978 1.22461 106.914 1.20312 106.856 1.16016C106.813 1.10286 106.792 1.03841 106.792 0.966797C106.792 0.880859 106.813 0.816406 106.856 0.773438C106.914 0.716146 106.978 0.6875 107.05 0.6875H112.872L114.935 20.3887L117.577 0.6875H123.421C123.507 0.6875 123.578 0.716146 123.636 0.773438C123.693 0.816406 123.722 0.873698 123.722 0.945312C123.722 1.03125 123.693 1.10286 123.636 1.16016C123.578 1.20312 123.507 1.22461 123.421 1.22461H122.024V32.4414H123.421C123.464 32.4414 123.493 32.4557 123.507 32.4844C123.55 32.556 123.571 32.6419 123.571 32.7422C123.571 32.8281 123.557 32.8926 123.528 32.9355C123.5 32.9785 123.464 33 123.421 33H116.353C116.295 33 116.238 32.9785 116.181 32.9355C116.138 32.8783 116.116 32.8066 116.116 32.7207C116.116 32.6348 116.138 32.5703 116.181 32.5273C116.238 32.4701 116.295 32.4414 116.353 32.4414H117.835V2.62109L114.054 32.248C113.996 32.6348 113.946 32.8568 113.903 32.9141C113.86 32.9714 113.796 33 113.71 33H112.313C112.228 33 112.163 32.9714 112.12 32.9141C112.077 32.8568 112.034 32.6348 111.991 32.248L108.897 2.92188V30.1641C108.897 30.9089 108.969 31.4316 109.112 31.7324C109.27 32.0332 109.535 32.248 109.907 32.377L110.874 32.4629C110.946 32.5059 110.981 32.5918 110.981 32.7207C110.981 32.8353 110.96 32.9141 110.917 32.957C110.888 32.9857 110.802 33 110.659 33H106.856C106.799 33 106.749 32.9785 106.706 32.9355C106.677 32.8926 106.663 32.8353 106.663 32.7637C106.663 32.6921 106.677 32.6419 106.706 32.6133C106.749 32.5703 106.878 32.5059 107.093 32.4199C107.537 32.248 107.838 32.026 107.995 31.7539C108.21 31.3815 108.317 30.8516 108.317 30.1641V1.22461ZM126.364 1.22461H125.097C125.025 1.22461 124.961 1.20312 124.903 1.16016C124.86 1.10286 124.839 1.03841 124.839 0.966797C124.839 0.880859 124.86 0.816406 124.903 0.773438C124.961 0.716146 125.025 0.6875 125.097 0.6875H130.919L132.981 20.3887L135.624 0.6875H141.468C141.554 0.6875 141.625 0.716146 141.683 0.773438C141.74 0.816406 141.769 0.873698 141.769 0.945312C141.769 1.03125 141.74 1.10286 141.683 1.16016C141.625 1.20312 141.554 1.22461 141.468 1.22461H140.071V32.4414H141.468C141.511 32.4414 141.539 32.4557 141.554 32.4844C141.597 32.556 141.618 32.6419 141.618 32.7422C141.618 32.8281 141.604 32.8926 141.575 32.9355C141.547 32.9785 141.511 33 141.468 33H134.399C134.342 33 134.285 32.9785 134.228 32.9355C134.185 32.8783 134.163 32.8066 134.163 32.7207C134.163 32.6348 134.185 32.5703 134.228 32.5273C134.285 32.4701 134.342 32.4414 134.399 32.4414H135.882V2.62109L132.101 32.248C132.043 32.6348 131.993 32.8568 131.95 32.9141C131.907 32.9714 131.843 33 131.757 33H130.36C130.274 33 130.21 32.9714 130.167 32.9141C130.124 32.8568 130.081 32.6348 130.038 32.248L126.944 2.92188V30.1641C126.944 30.9089 127.016 31.4316 127.159 31.7324C127.317 32.0332 127.582 32.248 127.954 32.377L128.921 32.4629C128.993 32.5059 129.028 32.5918 129.028 32.7207C129.028 32.8353 129.007 32.9141 128.964 32.957C128.935 32.9857 128.849 33 128.706 33H124.903C124.846 33 124.796 32.9785 124.753 32.9355C124.724 32.8926 124.71 32.8353 124.71 32.7637C124.71 32.6921 124.724 32.6419 124.753 32.6133C124.796 32.5703 124.925 32.5059 125.14 32.4199C125.584 32.248 125.884 32.026 126.042 31.7539C126.257 31.3815 126.364 30.8516 126.364 30.1641V1.22461ZM144.347 1.22461H142.972C142.828 1.12435 142.757 1.03841 142.757 0.966797C142.757 0.866536 142.828 0.773438 142.972 0.6875H155.175V12.6543C155.089 12.7975 155.003 12.8691 154.917 12.8691C154.831 12.8691 154.767 12.8477 154.724 12.8047C154.695 12.7474 154.674 12.5397 154.659 12.1816C154.559 9.80404 154.187 7.59115 153.542 5.54297C152.897 3.49479 152.274 2.19857 151.673 1.6543C151.358 1.36784 150.828 1.22461 150.083 1.22461H148.751V16.3496C149.567 16.2637 150.233 15.834 150.749 15.0605C151.437 14.015 151.78 12.4108 151.78 10.248V8.57227C151.78 8.50065 151.802 8.44336 151.845 8.40039C151.902 8.3431 151.966 8.31445 152.038 8.31445C152.11 8.31445 152.167 8.3431 152.21 8.40039C152.253 8.44336 152.274 8.50065 152.274 8.57227V24.5352C152.274 24.6068 152.253 24.6712 152.21 24.7285C152.167 24.7715 152.11 24.793 152.038 24.793C151.966 24.793 151.902 24.7715 151.845 24.7285C151.802 24.6712 151.78 24.6068 151.78 24.5352V22.9883C151.78 20.8685 151.394 19.1855 150.62 17.9395C150.162 17.2233 149.682 16.8652 149.181 16.8652C149.052 16.8652 148.951 16.9082 148.88 16.9941C148.794 17.0944 148.751 17.252 148.751 17.4668V32.4414H149.438C150.026 32.4414 150.606 32.2266 151.179 31.7969C151.752 31.3529 152.289 30.5938 152.79 29.5195C153.291 28.431 153.678 27.2493 153.95 25.9746C154.394 23.9121 154.616 22.3008 154.616 21.1406V19.7227C154.716 19.5651 154.81 19.4863 154.896 19.4863C154.981 19.4863 155.046 19.5078 155.089 19.5508C155.146 19.5938 155.175 19.651 155.175 19.7227V33H142.972C142.871 33 142.793 32.9714 142.735 32.9141C142.678 32.8568 142.649 32.7923 142.649 32.7207C142.649 32.6348 142.678 32.5703 142.735 32.5273C142.793 32.4701 142.871 32.4414 142.972 32.4414H144.347V1.22461ZM157.71 1.22461H156.442C156.285 1.13867 156.206 1.04557 156.206 0.945312C156.206 0.859375 156.285 0.773438 156.442 0.6875H163.21C164.886 0.6875 166.34 1.40365 167.571 2.83594C168.803 4.25391 169.419 6.19466 169.419 8.6582C169.419 10.0762 169.183 11.3366 168.71 12.4395C168.237 13.5423 167.535 14.4518 166.604 15.168C166.046 15.5977 165.179 16.013 164.005 16.4141C165.323 16.8008 166.239 17.1732 166.755 17.5312C167.629 18.1328 168.273 18.8561 168.688 19.7012C169.118 20.5462 169.333 21.6419 169.333 22.9883V30.8516C169.333 31.2096 169.39 31.4603 169.505 31.6035C169.619 31.7467 169.77 31.8184 169.956 31.8184C170.243 31.8184 170.5 31.6393 170.729 31.2812C171.102 30.7083 171.338 29.6771 171.438 28.1875C171.453 27.9297 171.489 27.7578 171.546 27.6719C171.618 27.5859 171.689 27.543 171.761 27.543C171.847 27.543 171.918 27.5931 171.976 27.6934C172.047 27.8079 172.083 28.0228 172.083 28.3379C172.083 29.9277 171.696 31.1595 170.923 32.0332C170.164 32.8926 169.204 33.3223 168.044 33.3223C167.013 33.3223 166.232 33.0573 165.702 32.5273C165.172 31.9974 164.907 31.2454 164.907 30.2715V18.9062C164.907 17.9323 164.664 17.2806 164.177 16.9512C163.89 16.765 163.217 16.6719 162.157 16.6719V32.4414H163.21C163.325 32.4414 163.41 32.4701 163.468 32.5273C163.539 32.5846 163.575 32.6491 163.575 32.7207C163.575 32.7923 163.539 32.8568 163.468 32.9141C163.41 32.9714 163.325 33 163.21 33H156.442C156.356 33 156.285 32.9785 156.228 32.9355C156.17 32.8783 156.142 32.8066 156.142 32.7207C156.142 32.6348 156.17 32.5703 156.228 32.5273C156.285 32.4701 156.356 32.4414 156.442 32.4414H157.71V1.22461ZM162.157 1.22461V16.0918H163.21C163.711 16.0918 164.119 15.9199 164.435 15.5762C164.75 15.2324 164.907 14.7311 164.907 14.0723V2.92188C164.907 2.27734 164.793 1.83333 164.563 1.58984C164.334 1.34635 163.883 1.22461 163.21 1.22461H162.157Z"
                    fill={footerTextColor ? footerTextColor : "#363755"}
                  />
                </svg>
              </div>
              <div className="col-3 flex">
                {
                  footerData?.footer_social_media_links && footerData.footer_social_media_links?.length > 0 ?
                    footerData?.footer_social_media_links.map((item, index) => {
                      return (
                        <a href={item?.link} target="block">
                          <div className="footer-icon-wrapper iconStyle icon cursor-pointer w-9 h-9 flex items-center justify-center" key={index} style={{
                            color: footerTextColor ? footerTextColor : "#363755",
                            border: `1px solid ${socialMediaBorderColor}`,
                          }}>
                            <img src={item?.image?.url} alt="social media icon" width={item?.image?.name === "facebook.png" ? 10 : 20} height={20} className={classnames(" ")} />
                          </div>
                        </a>
                      )
                    })
                    : null
                }
              </div>
            </div>
          </div>

          <hr className="horizontalLine2" />

          <p className="ftduncan">
            {footerData?.copyright}
          </p>
        </div>
      </Section>
    </footer>
  );
};

export default productDetailsFooter;
